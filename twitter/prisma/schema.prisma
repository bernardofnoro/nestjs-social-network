// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  Id          Int    @id   @default(autoincrement())
  name        String
  surname     String
  username    String    @unique
  password    String
  about       String
  birthday    String
  people      People[]
  tweet       Tweet[]
  favoriteTweet favoriteTweet[]
  createdAt   DateTime  @default(now()) @map("created_at")
}

model Tweet {
  Id          Int    @id   @default(autoincrement())
  content     String
  likes       Int
  userId      Int
  user        User[]    @relation(fields: [userId], references: [Id])
  favoriteTweet favoriteTweet[]
  createdAt   DateTime  @default(now()) @map("created_at")
}
model People {
  Id          Int      @id   @default(autoincrement())
  userId      Int
  user        User[]      @relation(fields: [userId], references: [Id])
  followerId  Int
  follower    Follower[]  @relation(fields: [followerId], references: [Id])
  followingId  Int
  following    Following[]  @relation(fields: [followingId], references: [Id])
  createdAt   DateTime    @default(now()) @map("created_at")
}

model Follower {
  Id          Int    @id   @default(autoincrement())
  follower    String
  People      People[]
  createdAt   DateTime  @default(now()) @map("created_at")
}
model Following {
  Id          Int    @id   @default(autoincrement())
  followee    String
  People      People[]
  createdAt   DateTime  @default(now()) @map("created_at")
}

model favoriteTweet {
  Id          Int    @id   @default(autoincrement())
  userId      Int
  user        User[]      @relation(fields: [userId], references: [Id])
  tweetId      Int
  tweet        Tweet[]      @relation(fields: [tweetId], references: [Id])
  createdAt   DateTime  @default(now()) @map("created_at")
}